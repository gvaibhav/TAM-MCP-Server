{
  "info": {
    "name": "TAM MCP Server - Backend API Testing",
    "description": "Comprehensive Postman collection for testing backend API integrations with all 8 data sources in the TAM MCP Server. This collection covers both premium APIs (requiring API keys) and public APIs.\n\n**Data Sources Covered:**\n- Alpha Vantage (Premium)\n- Census Bureau (Premium) \n- FRED (Premium)\n- Nasdaq Data Link (Premium)\n- BLS (Enhanced with API key)\n- World Bank (Public)\n- OECD (Public)\n- IMF (Public)\n\n**Testing Approach:**\n- Unit Tests: Mocked APIs for fast code logic testing\n- Integration Tests: Real APIs for connectivity testing\n- Health Checks: Service availability verification\n\n**Setup Instructions:**\n1. Import this collection into Postman\n2. Configure environment variables (see Variables tab)\n3. Add your API keys to the environment\n4. Run individual requests or entire folders\n5. Use the Test Runner for comprehensive testing",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "alpha_vantage_api_key",
      "value": "{{ALPHA_VANTAGE_API_KEY}}",
      "description": "Alpha Vantage API Key - Get from https://www.alphavantage.co/support/#api-key"
    },
    {
      "key": "census_api_key", 
      "value": "{{CENSUS_API_KEY}}",
      "description": "Census Bureau API Key - Get from https://api.census.gov/data/key_signup.html"
    },
    {
      "key": "fred_api_key",
      "value": "{{FRED_API_KEY}}",
      "description": "FRED API Key - Get from https://fred.stlouisfed.org/docs/api/api_key.html"
    },
    {
      "key": "nasdaq_api_key",
      "value": "{{NASDAQ_DATA_LINK_API_KEY}}",
      "description": "Nasdaq Data Link API Key - Get from https://data.nasdaq.com/account/profile"
    },
    {
      "key": "bls_api_key",
      "value": "{{BLS_API_KEY}}",
      "description": "BLS API Key - Optional, get from https://data.bls.gov/registrationEngine/"
    },
    {
      "key": "test_symbol",
      "value": "IBM",
      "description": "Sample stock symbol for testing"
    },
    {
      "key": "test_country_code",
      "value": "US",
      "description": "Sample country code for testing"
    },
    {
      "key": "test_naics_code",
      "value": "23",
      "description": "Sample NAICS industry code for testing"
    }
  ],
  "item": [
    {
      "name": "üîë Premium APIs (Require API Keys)",
      "description": "Tests for premium data sources that require API keys",
      "item": [
        {
          "name": "üìà Alpha Vantage",
          "description": "Financial market data and company information",
          "item": [
            {
              "name": "Company Overview (Market Cap)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://www.alphavantage.co/query?function=OVERVIEW&symbol={{test_symbol}}&apikey={{alpha_vantage_api_key}}",
                  "protocol": "https",
                  "host": ["www", "alphavantage", "co"],
                  "path": ["query"],
                  "query": [
                    {
                      "key": "function",
                      "value": "OVERVIEW",
                      "description": "Company overview function"
                    },
                    {
                      "key": "symbol", 
                      "value": "{{test_symbol}}",
                      "description": "Stock symbol (e.g., IBM, AAPL)"
                    },
                    {
                      "key": "apikey",
                      "value": "{{alpha_vantage_api_key}}",
                      "description": "Your Alpha Vantage API key"
                    }
                  ]
                },
                "description": "Fetch company overview data including market capitalization"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has company data', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('Symbol');",
                      "    pm.expect(jsonData).to.have.property('Name');",
                      "    pm.expect(jsonData).to.have.property('MarketCapitalization');",
                      "});",
                      "",
                      "pm.test('No rate limit reached', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.not.have.property('Note');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Daily Time Series",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol={{test_symbol}}&apikey={{alpha_vantage_api_key}}",
                  "protocol": "https",
                  "host": ["www", "alphavantage", "co"],
                  "path": ["query"],
                  "query": [
                    {
                      "key": "function",
                      "value": "TIME_SERIES_DAILY_ADJUSTED",
                      "description": "Daily time series function"
                    },
                    {
                      "key": "symbol",
                      "value": "{{test_symbol}}",
                      "description": "Stock symbol"
                    },
                    {
                      "key": "apikey",
                      "value": "{{alpha_vantage_api_key}}",
                      "description": "Your Alpha Vantage API key"
                    }
                  ]
                },
                "description": "Fetch daily time series data for a stock symbol"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has time series data', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('Meta Data');",
                      "    pm.expect(jsonData).to.have.property('Time Series (Daily)');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "üèõÔ∏è Census Bureau",
          "description": "Demographic and economic census data",
          "item": [
            {
              "name": "County Business Patterns",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://api.census.gov/data/2021/cbp?get=NAICS2017_LABEL,EMP&for=state:*&NAICS2017={{test_naics_code}}&key={{census_api_key}}",
                  "protocol": "https",
                  "host": ["api", "census", "gov"],
                  "path": ["data", "2021", "cbp"],
                  "query": [
                    {
                      "key": "get",
                      "value": "NAICS2017_LABEL,EMP",
                      "description": "Variables to retrieve"
                    },
                    {
                      "key": "for",
                      "value": "state:*",
                      "description": "Geographic scope"
                    },
                    {
                      "key": "NAICS2017",
                      "value": "{{test_naics_code}}",
                      "description": "NAICS industry code"
                    },
                    {
                      "key": "key",
                      "value": "{{census_api_key}}",
                      "description": "Your Census API key"
                    }
                  ]
                },
                "description": "Fetch County Business Patterns data for employment by industry"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is array format', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.be.an('array');",
                      "    pm.expect(jsonData.length).to.be.greaterThan(1);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "üè¶ FRED",
          "description": "Federal Reserve Economic Data",
          "item": [
            {
              "name": "Economic Series Data",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://api.stlouisfed.org/fred/series/observations?series_id=GDP&api_key={{fred_api_key}}&file_type=json&limit=1&sort_order=desc",
                  "protocol": "https",
                  "host": ["api", "stlouisfed", "org"],
                  "path": ["fred", "series", "observations"],
                  "query": [
                    {
                      "key": "series_id",
                      "value": "GDP",
                      "description": "FRED series ID"
                    },
                    {
                      "key": "api_key",
                      "value": "{{fred_api_key}}",
                      "description": "Your FRED API key"
                    },
                    {
                      "key": "file_type",
                      "value": "json",
                      "description": "Response format"
                    },
                    {
                      "key": "limit",
                      "value": "1",
                      "description": "Number of observations"
                    },
                    {
                      "key": "sort_order",
                      "value": "desc",
                      "description": "Sort order"
                    }
                  ]
                },
                "description": "Fetch the latest GDP data from FRED"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has observations', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('observations');",
                      "    pm.expect(jsonData.observations).to.be.an('array');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Series Search",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://api.stlouisfed.org/fred/series/search?search_text=unemployment+rate&api_key={{fred_api_key}}&file_type=json&limit=5",
                  "protocol": "https",
                  "host": ["api", "stlouisfed", "org"],
                  "path": ["fred", "series", "search"],
                  "query": [
                    {
                      "key": "search_text",
                      "value": "unemployment rate",
                      "description": "Search terms"
                    },
                    {
                      "key": "api_key",
                      "value": "{{fred_api_key}}",
                      "description": "Your FRED API key"
                    },
                    {
                      "key": "file_type",
                      "value": "json",
                      "description": "Response format"
                    },
                    {
                      "key": "limit",
                      "value": "5",
                      "description": "Number of results"
                    }
                  ]
                },
                "description": "Search for FRED series by keywords"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has series data', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('seriess');",
                      "    pm.expect(jsonData.seriess).to.be.an('array');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "üìä Nasdaq Data Link",
          "description": "Economic and financial datasets from Nasdaq",
          "item": [
            {
              "name": "FRED Dataset via Nasdaq",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://data.nasdaq.com/api/v3/datasets/FRED/GDP/data.json?api_key={{nasdaq_api_key}}&limit=1&order=desc",
                  "protocol": "https",
                  "host": ["data", "nasdaq", "com"],
                  "path": ["api", "v3", "datasets", "FRED", "GDP", "data.json"],
                  "query": [
                    {
                      "key": "api_key",
                      "value": "{{nasdaq_api_key}}",
                      "description": "Your Nasdaq Data Link API key"
                    },
                    {
                      "key": "limit",
                      "value": "1",
                      "description": "Number of data points"
                    },
                    {
                      "key": "order",
                      "value": "desc",
                      "description": "Sort order"
                    }
                  ]
                },
                "description": "Fetch GDP data via Nasdaq Data Link"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has dataset data', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('dataset_data');",
                      "    pm.expect(jsonData.dataset_data).to.have.property('data');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "üåç Public APIs (No API Key Required)",
      "description": "Tests for public data sources that don't require API keys",
      "item": [
        {
          "name": "üèõÔ∏è World Bank",
          "description": "Global economic and development data",
          "item": [
            {
              "name": "GDP Current US$ (Latest)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://api.worldbank.org/v2/country/{{test_country_code}}/indicator/NY.GDP.MKTP.CD?format=json&mrv=1",
                  "protocol": "https",
                  "host": ["api", "worldbank", "org"],
                  "path": ["v2", "country", "{{test_country_code}}", "indicator", "NY.GDP.MKTP.CD"],
                  "query": [
                    {
                      "key": "format",
                      "value": "json",
                      "description": "Response format"
                    },
                    {
                      "key": "mrv",
                      "value": "1",
                      "description": "Most recent values"
                    }
                  ]
                },
                "description": "Fetch the most recent GDP data for a country"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has data array', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.be.an('array');",
                      "    pm.expect(jsonData.length).to.equal(2);",
                      "    pm.expect(jsonData[1]).to.be.an('array');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Population Total (Latest)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://api.worldbank.org/v2/country/{{test_country_code}}/indicator/SP.POP.TOTL?format=json&mrv=1",
                  "protocol": "https", 
                  "host": ["api", "worldbank", "org"],
                  "path": ["v2", "country", "{{test_country_code}}", "indicator", "SP.POP.TOTL"],
                  "query": [
                    {
                      "key": "format",
                      "value": "json",
                      "description": "Response format"
                    },
                    {
                      "key": "mrv",
                      "value": "1",
                      "description": "Most recent values"
                    }
                  ]
                },
                "description": "Fetch the most recent population data for a country"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response structure is correct', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.be.an('array');",
                      "    if (jsonData[1] && jsonData[1].length > 0) {",
                      "        pm.expect(jsonData[1][0]).to.have.property('value');",
                      "    }",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "üìà OECD",
          "description": "International comparative statistics",
          "item": [
            {
              "name": "GDP Data (SDMX-JSON)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://sdmx.oecd.org/sdmx-json/data/SNA_TABLE1/AUS+AUT.GDP.CUR.A/all?startTime=2020&endTime=2022",
                  "protocol": "https",
                  "host": ["sdmx", "oecd", "org"],
                  "path": ["sdmx-json", "data", "SNA_TABLE1", "AUS+AUT.GDP.CUR.A", "all"],
                  "query": [
                    {
                      "key": "startTime",
                      "value": "2020",
                      "description": "Start year"
                    },
                    {
                      "key": "endTime",
                      "value": "2022",
                      "description": "End year"
                    }
                  ]
                },
                "description": "Fetch GDP data for Australia and Austria from OECD"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has SDMX structure', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData.data).to.have.property('dataSets');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "üåê IMF",
          "description": "International monetary and financial data",
          "item": [
            {
              "name": "IFS - GDP Growth Annual",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "http://dataservices.imf.org/REST/SDMX_JSON.svc/CompactData/IFS/A.US.NGDP_RPCH?startPeriod=2020&endPeriod=2022",
                  "protocol": "http",
                  "host": ["dataservices", "imf", "org"],
                  "path": ["REST", "SDMX_JSON.svc", "CompactData", "IFS", "A.US.NGDP_RPCH"],
                  "query": [
                    {
                      "key": "startPeriod",
                      "value": "2020",
                      "description": "Start year"
                    },
                    {
                      "key": "endPeriod",
                      "value": "2022",
                      "description": "End year"
                    }
                  ]
                },
                "description": "Fetch US Real GDP Growth data from IMF IFS"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has IMF SDMX structure', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('CompactData');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        },
        {
          "name": "üë∑ BLS (Enhanced)",
          "description": "Bureau of Labor Statistics - Enhanced with API key",
          "item": [
            {
              "name": "Employment Statistics (With API Key)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"seriesid\": [\"LNS14000000\"],\n  \"startyear\": \"2022\",\n  \"endyear\": \"2023\",\n  \"registrationkey\": \"{{bls_api_key}}\"\n}"
                },
                "url": {
                  "raw": "https://api.bls.gov/publicAPI/v2/timeseries/data/",
                  "protocol": "https",
                  "host": ["api", "bls", "gov"],
                  "path": ["publicAPI", "v2", "timeseries", "data", ""]
                },
                "description": "Fetch unemployment rate data from BLS using API key for higher limits"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has BLS data structure', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('status');",
                      "    pm.expect(jsonData).to.have.property('Results');",
                      "    if (jsonData.Results) {",
                      "        pm.expect(jsonData.Results).to.have.property('series');",
                      "    }",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "Employment Statistics (Public - No Key)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"seriesid\": [\"LNS14000000\"],\n  \"startyear\": \"2023\",\n  \"endyear\": \"2023\"\n}"
                },
                "url": {
                  "raw": "https://api.bls.gov/publicAPI/v2/timeseries/data/",
                  "protocol": "https",
                  "host": ["api", "bls", "gov"],
                  "path": ["publicAPI", "v2", "timeseries", "data", ""]
                },
                "description": "Fetch unemployment rate data from BLS without API key (limited requests)"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Public API response structure', function () {",
                      "    const jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('status');",
                      "    // Note: Public API may have stricter limits",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "üîß Health Checks & Utilities",
      "description": "Service availability and utility endpoints",
      "item": [
        {
          "name": "Alpha Vantage Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://www.alphavantage.co/query?function=OVERVIEW&symbol=MSFT&apikey={{alpha_vantage_api_key}}",
              "protocol": "https",
              "host": ["www", "alphavantage", "co"],
              "path": ["query"],
              "query": [
                {
                  "key": "function",
                  "value": "OVERVIEW",
                  "description": "Simple test endpoint"
                },
                {
                  "key": "symbol",
                  "value": "MSFT",
                  "description": "Microsoft stock"
                },
                {
                  "key": "apikey",
                  "value": "{{alpha_vantage_api_key}}",
                  "description": "API key"
                }
              ]
            },
            "description": "Test Alpha Vantage service availability"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Alpha Vantage is available', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    // Check for valid response or rate limit message",
                  "    pm.expect(jsonData).to.satisfy(function (data) {",
                  "        return data.Symbol || data.Note;",
                  "    });",
                  "});",
                  "",
                  "pm.test('API key is valid', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.not.have.property('Error Message');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "World Bank Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://api.worldbank.org/v2/countries?format=json&per_page=1",
              "protocol": "https",
              "host": ["api", "worldbank", "org"],
              "path": ["v2", "countries"],
              "query": [
                {
                  "key": "format",
                  "value": "json",
                  "description": "Response format"
                },
                {
                  "key": "per_page",
                  "value": "1",
                  "description": "Limit results"
                }
              ]
            },
            "description": "Test World Bank service availability"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('World Bank is available', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    pm.expect(jsonData.length).to.equal(2);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "OECD Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "https://sdmx.oecd.org/sdmx-json/dataflow/all",
              "protocol": "https",
              "host": ["sdmx", "oecd", "org"],
              "path": ["sdmx-json", "dataflow", "all"]
            },
            "description": "Test OECD service availability"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('OECD is available', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üß™ Test Scenarios",
      "description": "Complete testing scenarios combining multiple APIs",
      "item": [
        {
          "name": "Market Size Analysis Workflow",
          "description": "Test workflow combining multiple data sources for comprehensive market analysis",
          "item": [
            {
              "name": "1. Company Financial Data",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://www.alphavantage.co/query?function=OVERVIEW&symbol={{test_symbol}}&apikey={{alpha_vantage_api_key}}",
                  "protocol": "https",
                  "host": ["www", "alphavantage", "co"],
                  "path": ["query"],
                  "query": [
                    {
                      "key": "function",
                      "value": "OVERVIEW"
                    },
                    {
                      "key": "symbol",
                      "value": "{{test_symbol}}"
                    },
                    {
                      "key": "apikey",
                      "value": "{{alpha_vantage_api_key}}"
                    }
                  ]
                },
                "description": "Step 1: Get company market capitalization"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Company data retrieved', function () {",
                      "    pm.response.to.have.status(200);",
                      "    const jsonData = pm.response.json();",
                      "    if (jsonData.Symbol) {",
                      "        pm.environment.set('company_market_cap', jsonData.MarketCapitalization);",
                      "        pm.environment.set('company_sector', jsonData.Sector);",
                      "    }",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "2. Industry Employment Data",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://api.census.gov/data/2021/cbp?get=NAICS2017_LABEL,EMP&for=us:*&NAICS2017={{test_naics_code}}&key={{census_api_key}}",
                  "protocol": "https",
                  "host": ["api", "census", "gov"],
                  "path": ["data", "2021", "cbp"],
                  "query": [
                    {
                      "key": "get",
                      "value": "NAICS2017_LABEL,EMP"
                    },
                    {
                      "key": "for",
                      "value": "us:*"
                    },
                    {
                      "key": "NAICS2017",
                      "value": "{{test_naics_code}}"
                    },
                    {
                      "key": "key",
                      "value": "{{census_api_key}}"
                    }
                  ]
                },
                "description": "Step 2: Get industry employment statistics"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Industry data retrieved', function () {",
                      "    pm.response.to.have.status(200);",
                      "    const jsonData = pm.response.json();",
                      "    if (jsonData.length > 1) {",
                      "        pm.environment.set('industry_employment', jsonData[1][1]);",
                      "    }",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "3. Economic Context",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://api.worldbank.org/v2/country/{{test_country_code}}/indicator/NY.GDP.MKTP.CD?format=json&mrv=1",
                  "protocol": "https",
                  "host": ["api", "worldbank", "org"],
                  "path": ["v2", "country", "{{test_country_code}}", "indicator", "NY.GDP.MKTP.CD"],
                  "query": [
                    {
                      "key": "format",
                      "value": "json"
                    },
                    {
                      "key": "mrv",
                      "value": "1"
                    }
                  ]
                },
                "description": "Step 3: Get economic context (GDP)"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test('Economic context retrieved', function () {",
                      "    pm.response.to.have.status(200);",
                      "    const jsonData = pm.response.json();",
                      "    if (jsonData[1] && jsonData[1].length > 0) {",
                      "        pm.environment.set('country_gdp', jsonData[1][0].value);",
                      "    }",
                      "});",
                      "",
                      "// Display summary of collected data",
                      "pm.test('Market analysis data summary', function () {",
                      "    console.log('=== Market Analysis Summary ===');",
                      "    console.log('Company Market Cap:', pm.environment.get('company_market_cap'));",
                      "    console.log('Company Sector:', pm.environment.get('company_sector'));",
                      "    console.log('Industry Employment:', pm.environment.get('industry_employment'));",
                      "    console.log('Country GDP:', pm.environment.get('country_gdp'));",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('Running TAM MCP Server API test...');",
          "",
          "// Check if required variables are set",
          "const requiredVars = {",
          "    'ALPHA_VANTAGE_API_KEY': 'Alpha Vantage',",
          "    'CENSUS_API_KEY': 'Census Bureau',",
          "    'FRED_API_KEY': 'FRED',",
          "    'NASDAQ_DATA_LINK_API_KEY': 'Nasdaq Data Link'",
          "};",
          "",
          "Object.keys(requiredVars).forEach(key => {",
          "    const value = pm.environment.get(key);",
          "    if (!value || value === '{{' + key + '}}') {",
          "        console.warn(`‚ö†Ô∏è ${requiredVars[key]} API key not configured. Set ${key} in environment.`);",
          "    } else {",
          "        console.log(`‚úÖ ${requiredVars[key]} API key is configured`);",
          "    }",
          "});"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "pm.test('Response time is reasonable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(30000); // 30 seconds max",
          "});",
          "",
          "pm.test('No server errors', function () {",
          "    pm.expect(pm.response.code).to.be.below(500);",
          "});"
        ]
      }
    }
  ]
}